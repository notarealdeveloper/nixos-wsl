# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      #device = "/dev/disk/by-uuid/674efd12-697c-4410-bade-5634984baf08";
      device = "/dev/disk/by-label/NixOS";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      #device = "/dev/disk/by-uuid/3B52-0E54";
      device = "/dev/disk/by-label/EFI";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  fileSystems."/home/jason/Desktop" =
    {
      #device = "/dev/disk/by-uuid/4bdc5d0f-19b2-410d-88ca-a8892b1db448";
      device = "/dev/disk/by-label/Desktop";
      fsType = "ext4";
    };

  swapDevices =
    [ {
        device = "/dev/disk/by-label/Swap"; }
        #device = "/dev/disk/by-uuid/62b54817-058f-41a6-8ec8-00e2334411de"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
